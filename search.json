[{"title":"github 报错 Permission denied (publickey)","url":"/cn/github无法下载项目解决/","content":"\n\n# git clone 下载GitHub项目时产生报错\n---\n Description： **显示报错\"git@github.com: Permission denied (publickey). Could not read from remote repository\"** 的<font color='Darkorange'>解决方案</font> \n\n--- \n##  报错原因分析：\n\npermission denied (publickey) 没有权限的的publickey，出现这种错误的原因可能：\n\n$\\Rightarrow$  客户端与服务器未生成 **ssh key** \n\n$\\Rightarrow$  客户端与服务器的 **ssh_key** 不匹配\n\n所以我们需要在本地重新生成一次 **ssh key** ,服务器也要重新配置一次。\n\n---\n\n##  解决步骤：\n\n### **客户端(本地) 生成 ssh key** \n\n  在终端输入：\n\n  `ssh-keygen -t rsa -C\"youemail@example.com\"          `\n\n  这个邮箱是你注册GitHub 账号时使用的邮箱。 回车;\n\n  ![gite](/img/essay_img/gite.png)\n\n​              可以选择合适路径来保存 **the key** , 并两次确认输入 这个passpharse .\n\n​\t\t\t  这样我们完成了 ssh key 的生成工作。\n\n​\t\t\t  然后我们在终端输入：\n\n> `ssh -v git@github.com` \n\n​              最后会出下面两句  \n![](/img/essay_img/gite2.png)\n​\t\t\t再在终端输入\n\n>  \t`ssh-agent -s`![gite2](/Users/stand/Desktop/Typora img/gite2.png) \n>\n> 接着在终端输入\n>\n> `                       ssh-agent -s`\n>\n> ![](/img/essay_img/gite3.png)\n> \n> 接着在执行:   `ssh-add ~/.ssh/id_rsa` \n>\n> ![](/img/essay_img/gite4.png)\n> id_rsa 被保存在了指定路径： Identity added: ...这是ssh key文件路径的信息\n\n###  **配置服务端** \n\n  打开你刚刚生成的id_rsa.pub，将里面的内容复制，进入你的github账号，在settings下，SSH and GPG keys下new SSH key，然后将id_rsa.pub里的内容复制到Key中，完成后Add SSH Key。\n\n  ![](/img/essay_img/gite5.png)\n\n### **最后，验证Key**\n\n  输入 ：   `    ssh -T git@github.com`\n\n  显示如下信息：\n\n  ![](/img/essay_img/gite6.png)\n\n  显示“Hi xxx! You've successfully authenticated, but GitHub does not provide shell access. ”，则说明我们的问题已经得到了解决！  \n**【<font color='red'>\"Get!\"</font>】**  \n","tags":["Hexo-Theme-LiveMyLife"],"categories":["Hexo-Theme-LiveMyLife"]},{"title":"认识队列","url":"/cn/队列/","content":"\n# 队列\n\n<FONT COLOR='DARKORANGE'>队列是一种特殊的线性表，我们可以操作它的头部和尾部的元素，中间的元素我们操作不了。队列先来的元素要排在前面，后来的元素排在后面，这是一种先进先出的结构</FONT>\n\n---\n\n## 一般队列\n\n![](/img/essay_img/queue1.png) \n\n队列左进右出，它的实现方式有两种，一种是基于数组的，一种是基于链表的，<font color='deepskyblue'>若是基于链表的话，实现起来更加容易，因为链表的长度是可变的。</font><FONT COLOR='mediumgreen'>但是如果基于的是数组的话，就不一样了，数组的大小在初始化的时间就已经确定了。</font> \n \n![](/img/essay_img/queue2.png) \n\n**front指向那个队列的头，tail指向队列尾的下一个存储空间 ，最初的时候front=0，tail=0，每添加一个元素，tail+1，每移除一个元素，front +1 。如果不断的加入和移除元素，会导致tail和front 越来越大，最后队列中无法再加入元素了，造成空间的极大浪费。**\n\n```\npublic class MyQueue<E>{\n// 初始化\n\tprivate final Object[] data;\n\tprivate final int maxSize;\n\tprivate int size;\n\tprivat int front tail=0,front=0;\n\tpublic MyQueue(int maxSize){\n\t\tif(maxSize<=0){\n\t\t\tthrow ...\n\t\t}\n\t\tthis.maxSize=maxSize;\n\t\tdata=new Object[this.maxSize];\n\t}\n\tpublic add(E e){\n\t\tif(ifFull()){\n\t\t\tthrow ...\n\t\t}\n\t\tdata[tail++]=e;\n\t\tsize++;\n\t}\n\tpublic E remove(){\n\t\tif(isEmpty){\n\t\t\tthrow ...\n\t\t}\n\t\tE t=(E)data[front];\n\t\tdata[front++]=null;\n\t\tsize--;\n\t\treturn t;\n\t}\n\tpublic boolean isEmpty(){\n\t\treturn front==tail && !isFull();\n\t}\n\tpublic boolean isFull(){// 最后一个位置是不存储元素的\n\t\treturn tail==maxSize-1;\n\t}\n\tpublic int getSize(){\n\t\treturn size;\n\t}\n}\n```\n\n<font color='darkRed'>**队列的实现方式不一定是这一种方式，如我们可以让tail指向队尾的元素，或者是以链表的形式来实现，不同的实现方式会导致上面的方法有所不同，我们可以测试一下**</font>\n\n```\npublic static void main(String[] args) {\n\tMyQueue myQueue = new MyQueue(10);\n    System.out.println(\"isEmpty()=\" + myQueue.isEmpty());\n    System.out.println(\"isFull()=\" + myQueue.isFull());\n    System.out.println(\"getSize()=\" + myQueue.getSize());\n    for (int i = 0; i < 9; i++) {\n       myQueue.add(i * 100);\n       myQueue.remove();\n     }\n    System.out.println(\"----------------------------\");\n    System.out.println(\"isEmpty()=\" + myQueue.isEmpty());\n    System.out.println(\"isFull()=\" + myQueue.isFull());\n    System.out.println(\"getSize()=\" + myQueue.getSize());\n  }\n   打印结果: \n    isEmpty()=true\n    isFull()=false\n    getSize()=0\n    ----------------------------\n    isEmpty()=false\n    isFull()=true\n    getSize()=0\n```\n\n我们添加了9次，然后又移除了9次，结果队列竟然满了，**如果我们再添加一次的话肯定会抛异常**，但实际上队列的size是0，还是空的，也就是说数组的每个位置只能使用一次，这样就造成了极大的浪费。<FONT COLOR='DODGERBLUE'>**这是我们就需要考虑使用 双端队列**。</FONT> \n\n---\n\n## 双端队列(Deque)\n\n双端队列也是两个指针，一个 front ,指向队首 , 一个 tail，指向队尾的下一个存储单元，**并且双端队列的队首和队尾都可以添加和删除元素** ,两端都可以进出。\n\n![](/img/essay_img/queue3.png) \n\n<FONT COLOR='DARKORANGE'>***看一下代码：***</FONT>\n\n```\npublic class MyQueue<E>{\n\t\t// 存储的元素 \n\tprivate Object[] data;\n\tprivate int front,int tail;\n\tpublic MyQueue(int numElements){\n\t\tdata=new Object[numElements];\n\t}\n\t// 空间扩容，我们这里选择扩大一倍，当然也可以选择其他值\n\t//仅仅当满的时候才会触发扩容，此时tail和front都会指向同一元素\n\tprivate void doubleCapacity(){\n\t\tint p=front;\n\t\tint n=data.length;\n\t\tint r=n-p;\n\t\tObject[] a=new Object[n<<1];\n\t\tSystem.arraycopy(data,p,a,0,r); //先copy后面r 个\n\t\tSystem.arraycopy(data,0,a,r,p); //再copy前面p 个\n\t\tdata=a;\n\t\t//重新调整front和tail的值\n\t\tfront=0;\n\t\ttail=n;\n\t}\n\tvoid addFirst(E e){\n\t\t// 添加到 front 的前面，所以front-1;\n\t\tfront=(front-1+data.length)%data.length;\n\t\tdata[front]=e;\n\t\tif(front==tail) // 判断是否满了\n\t\t\tdoublecapacity();\n\t}\n\tvoid addLast(E e){\n\t\tdata[tail]=e;\n\t\ttail=(tail+1)%data.length;\n\t\tif(tail==front){\n\t\t\tdoubleCapacity();\n\t\t}\n\t}\n\tpublic E removeFirst(){\n\t\tif(isEmpty()){\n\t\t\tthrow...\n\t\t}\n\t\tE result=(E)data[front];\n\t\tdata[front]=null;\n\t\tfront=(front+1)%data.length;\n\t\treturn result;\n\t}\n\tpublic E removeLast(){\n\t\tif(isEmpty()){\n\t\t\tthrow...\n\t\t}\n\t\ttail=(tail-1+data.length)%data.length;\n\t\tE result=(E)data[front];\n\t\tdata[tail]=null;\n\t\treturn result;\n\t}\n\tpublic E peekFirst(){\n\t\tif(isEmpty()){\n\t\t\tthrow...\n\t\t}\n\t\treturn (E)data[front];\n\t}\n\tpubic E peekLast(){\n\t\tif(isEmpty()){\n\t\t\tthrow...\n\t\t}\n\t\treturn (E)data[(tail-1+data.length)%data.length];\n\t}\n\tpublic int size(){\n\t\treturn (tail-front+data.length)%data.length;\n\t}\n\tpublic boolean isEmpty(){\n\t\treturn front==tail;\n\t}\n}\n```\n\n## <FONT COLOR='DARKRED'>类比：</FONT>\n\n- 模拟列 和 模拟栈\n\n  | 模拟队列    | ---           | ---  | 模拟栈   |               |\n  | ----------- | ------------- | ---- | -------- | ------------- |\n  | Queue()方法 | 等效Deque方法 |      | 堆栈方法 | 等效Deque方法 |\n  | add(e)      | addLast(e)    |      | push(e)  | addFirst()    |\n  | offer(e)    | offerLast(e)  |      | pop()    | removeFirst() |\n  | remove()    | removeFirst() |      | peek()   | peekFirst()   |\n  | poll()      | pollFirst()   |      |          |               |\n  | element()   | getFirst()    |      |          |               |\n  | peek()      | peekFirst()   |      |          |               |\n\n  \n\n","tags":["Hexo-Theme-LiveMyLife"],"categories":["Hexo-Theme-LiveMyLife"]},{"title":"反转链表","url":"/cn/反转链表/","content":"# 如何优雅地递归反转链表\n## <font color='blue'>一、整个链表的反转</font> \n\n> 说明：\n>\n> ```\n> 输入: 1 ->2 ->3 ->4 ->5 ->null\n> 输出：null <-1 <-2 <-3<- 4 <-5 \n> ```\n\n先给出代码吧\n\n```\nListNode reverse(ListNode head){\n\tif(head==null || head.next==null)      return head;\n\tListNode next=reverse(head.next);\n\thead.next.next=head;\n\thead.next=null;\n\treturn next;\n}\n```\n\n<font color='Darkorange'>__输入一个结点`head`，将 [以`head`为起点]的链表进行反转，并且返回反转之后的头结点__</font> \n\n![](https://pic2.zhimg.com/80/v2-fc88f3947703719c0925d00bce32ad01_1440w.jpg)\n\n\n\n那么输入 `reverse(head)`后，会在这里进行递归：\n\n`ListNode last=reverse(head.next) ` 可以 理解为，**见下图**：\n\n![](https://pic3.zhimg.com/80/v2-17b1b50c70c9807d8ecb0b68e84c627a_1440w.jpg)\n\n\n\n当`reverse(head.next)` 执行完之后，争个链表就会变成：\n![](https://pic2.zhimg.com/80/v2-ca52f1cd70495bb9c86dc47179bac945_1440w.jpg)\n此外， `reverse` 反转之后的头结点，就会被我们用变量 last 接收了\n\n- 关于 `head.next.next=head; `\n\n  ![](https://pic3.zhimg.com/80/v2-39d422e8474a3c5b1c3a3dd57db07456_1440w.jpg)\n\n  之后：\n\n  ```\n  head.next=null;\n  return last;\n  ```\n\n  ![](https://pic2.zhimg.com/80/v2-e0e3be476580f592e28698b1fe8af705_1440w.jpg)\n\n  这样，就完成了单链表的反转，值得注意的是***每次 `reverse()` 函数会返回反转之后的头结点！*** \n------\n\n  ## <font color='blue'>二、进阶 反转前N 个节点</font>\n\n  例如我们来实现这样的一个函数\n  ```\n  //将链表的前n 个节点反转（n<= 链表长度）\n  ListNode reverseN(ListNode head,int n)\n  ```\n\n![](https://pic4.zhimg.com/80/v2-c9744a87e9182051f786ee7b05a91b33_1440w.jpg)\n\n这个只需要对之前的代码稍加修改即可：\n\n```\nListNode successor=null;   //后驱节点\n// 反转以 head 为起点的 n 个节点，返回 新的头节点。\nListNode reverseN(ListNode head,int n){\n\tif(n==1){\n\t\tsuccessor=head.next;\n\t\treturn head;\n\t}\n\tListNode last=reverseN(head,n-1);\n\thead.next.next=head;\n\thead.next=successor;\n\treturn last;\n}\n```\n\n<FONT COLOR='dodgerblue'>之前我们直接把 ` head.next` 设置为 null，因为整个链表反转后原来的 `head` 变成了整个链表的最后一个节点。但现在 `head` 节点在递归反转之后不一定是最后一个节点了，所以要记录后驱 `successor`（第 n + 1 个节点），反转之后将 `head` 连接上。</FONT> \n\n![](https://pic1.zhimg.com/80/v2-a69ad9a3c6f54f641f6f228eea38c09c_1440w.jpg)\n\n------\n\n## <font color='BLUE'>三、再进化  反转链表中的一部分</font>  \n\n   我们现在来解决对于一个链表中，索引区间在[m,n] 之间的部分进行反转\n      `ListNode reverseBetween(ListNode head,int m,int n)`\n\t首先，如果 `m==1` ,就相当于反转链表开头的 n 个元素，也就是：\n\n```\nListNode reverseBetween(ListNode head, int m, int n) {\n    // base case\n    if (m == 1) {\n        // 相当于反转前 n 个元素\n     \treturn reverseN(head,n);\n     }\n     // ....\n  }\n```\n\n​      <font color='violet'>那么当`m!=1` 时呢？ 如果我们把`head` 的索引视为 1 ，那么是要从第m 个元       素开始反转，索引我们可以将`head.next` 的索引视为 1 时，那么反转区间相对应的就是从 第 `m -1` 个元素开始的； 同理可以继续推 `head.next.next`  ........</font>\n\n**<font color='darkorange'>代码如下</font> **： \n\n```text\nListNode reverseBetween(ListNode head, int m, int n) {\n    // base case\n    if(m==1){\n    \treturn reverseN(head,n);\n    }\n    // 前进到反转的起点触发 base case\n    head.next=reverseBetween(head,m-1,n-1);\n    return head;\n}\n```\n\n","tags":["Hexo-Theme-LiveMyLife"],"categories":["Hexo-Theme-LiveMyLife"]},{"title":"Hexo-Theme-LiveMyLife","url":"/en/Hexo-Theme-LiveMyLife/","content":"\n> Ported Theme of [Hux Blog](https://github.com/Huxpro/huxpro.github.io), Thank [Huxpro](https://github.com/Huxpro) for designing such a flawless theme.\n>\n> This LiveMyLife theme created by [Vincent](https://v-vincen.github.io/) modified from the original Porter [YenYuHsuan](https://github.com/YenYuHsuan/hexo-theme-beantech) , refer to the Themes of [dusign](https://github.com/dusign/hexo-theme-snail)、[Utone](https://github.com/shixiaohu2206/hexo-theme-huhu), Thanks [dusign](https://github.com/dusign/hexo-theme-snail)、[Utone](https://github.com/shixiaohu2206/hexo-theme-huhu).\n>   \n\n## Repo\nGithub Repo: https://github.com/V-Vincen/hexo-theme-livemylife\nGitee Repo: https://gitee.com/V_Vincen/hexo-theme-livemylife\n\n### [View LiveMyLife Blog ➾](https://v-vincen.github.io/)\n\n![LiveMyLife Desktop](livemylife-desktop.png)\n\n## Quick Start\nI publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!\n\nLet's begin!!!\n\n### Install Node.js and Git\n```shell\n#For Mac\nbrew install node\nbrew install git\n```\n> Windows: Download & install Node.js. -> [Node.js](https://nodejs.org/zh-cn/download/)\n>\n> Windows: Download & install Git. -> [Git](https://git-scm.com/download/win)\n\n### Install Hexo\n```shell\n$ npm install -g hexo-cli\n```\n> What is [Hexo](https://hexo.io/docs/)?\n>\n> Hexo is a fast, simple and powerful blog framework. You write posts in Markdown (or other markup languages) and Hexo generates static files with a beautiful theme in seconds.\n\n### Setup your blog\n```shell\n$ hexo init blog\n```\n> More Commands -> [Hexo Commands](https://hexo.io/docs/commands)\n\n\n## Theme Usage\n### Init\n```shell\ncd blog\nrm -rf scaffolds source themes _config.landscape.yml _config.yml package.json yarn.lock #just keep node_modules\ngit clone https://github.com/V-Vincen/hexo-theme-livemylife.git\nmv hexo-theme-livemylife/* ./\nrm -rf hexo-theme-livemylife\nnpm install\n```\n\n### Set Theme\nModify the value of `theme`: in `_config.yml`\n```yml\n# Extensions\n## Themes: https://hexo.io/themes/\n## Plugins: https://hexo.io/plugins/\ntheme: livemylife\n```\n\n### Start the Server\n```shell\nhexo generate # or hexo g\nhexo server   # or hexo s\n```\nStarts a local server. By default, this is at `http://localhost:4000/`.\n> More Commands -> [Hexo Commands](https://hexo.io/docs/commands)\n\n## Configuration\nModify `_config.yml` file with your own info, Especially the section:\n\n### Site\nReplace the following information with your own.\n```yml\n# Site\ntitle: Live My Life\nsubtitle: 淡而无味也是一种味道\nauthor: Mr.Vincent\ntimezone:\n```\n\n### Internationalization (i18n)\nYou can use internationalization to present your site in different languages. -> Docs：[How to Use Internationalization（i18n）](https://v-vincen.github.io/en/How-to-Use-Internationalization%EF%BC%88i18n%EF%BC%89/)\n```yml\n# Internationalization (i18n) Setting\nlanguage: # At present, only en、cn and tw are supported. You can customize the language，refer to `languages/en.yml`.\n  - en\n  - cn\n\nlangselect:\n  enable: true # If open, it will automatically generation lang-select button.This button can jump in articles in different languages, but the articles must have the same name.\n  options: # langselect button display options\n    en: English\n    cn: 简体中文\n    # tw: 正體中文\n\ni18n_dir: :lang  \npermalink: :lang/:title/ \nnew_post_name: :lang/:title.md\n\n# hexo-generator-i18n config\n## Docs: https://github.com/xcatliu/hexo-generator-index-i18n\nindex_generator:\n  per_page: 10\n  pagination_dir: page\n  path: ''\n  order_by: -date\n\narchive_generator:\n  enabled: false\n  per_page: 10\n  yearly: true\n  monthly: true\n  daily: false\n  order_by: -date\n```\n*English preview:*\n\n![en](langen.png)\n\n*Chinese preview:*\n\n![cn](langcn.png)\n\n\n### CDN Settings\nJsDelivr is A free CDN for Open Source fast、reliable and automated. How to use Jsdelivr? -> Docs：[免费 CDN 提速 Github 静态资源访问](https://v-vincen.github.io/en/Github-%E5%8A%A0%E9%80%9F%E4%BC%98%E5%8C%96/#%E5%85%8D%E8%B4%B9-CDN-%E6%8F%90%E9%80%9F-Github-%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E8%AE%BF%E9%97%AE)\n```yml\n# CDN Setting\n# Docs: https://www.jsdelivr.com/?docs=gh\n# If Github Pages deploy，you can ues jsdelivr settings\n#\njsdelivr:\n  jsdelivr_url: https://cdn.jsdelivr.net/gh/\n  github_username: V-Vincen\n```\n**Note:** The theme of Hexo-theme-livemylife has a large number of css、js and images, in order to improve access speed, the theme for all of the resource files are made JsDelivr CDN. But only for Github Pages deployment. -> Docs：[How to apply JsDelivr CDN in Hexo-theme-livemylife Theme](https://v-vincen.github.io/en/How-to-apply-JsDelivr-CDN-in-Hexo-theme-livemylife-Theme/)\n\n### Site Settings\nPut customized pictures in `img` directory.\n```yml\n# Site settings\nSEOTitle: JavaDev | 一如Java深似海\nemail: hexo-theme-livemylife@mail.com\ndescription: \"It's an IT blog...\"\nkeyword: \"Java,v-vincen,v-vincen,livemylife,IT  blog,Blog\"\nheader-img: img/header_img/newhome_bg.jpg\narchives-img: img/header_img/archive_bg2.jpg\n```\n\n### Favicon Settings\n```yml\nfavicon: img/avatar/favicon.jpg\n```\n\n### Signature Settings\nCopy your signature image to `<root>/img/signature` and modify the `_config.yml`.\n```yml\nsignature: true   # show signature\nsignature-img: img/signature/<your-signature>\n```\n> How to create signature -> [Free Online Signature](https://fontmeme.com/signature-fonts/)\n\n### Wave Settings\n```yml\n# Wave settings\nwave: true\n```\n*Example:*\n\n![wave](wave.png)\n\n\n### SNS Settings\nIf you don’t want to display it, you can delete it directly.\n```yml\n# SNS settings\n# RSS: true\ngithub_username: V-Vincen\ntwitter_username: V_Vincen_\ninstagram_username: V_Vincen_\n# facebook_username:  yourAccount\n# linkedin_username:  yourAccount\n# zhihu_username: yourAccount\nweibo_username: WVincen\n```\n\n### Sidebar Settings\nCopy your avatar image to `<root>/img/avatar` and modify the `_config.yml`:\n```yml\nsidebar: true   # whether or not using Sidebar.\nsidebar-about-description: \"I don't know where I am going ,but I am on my way...\"\nsidebar-avatar: img/avatar/vincnet.jpg    # use absolute URL, seeing it's used in both `/` and `/about/`\nwidgets:\n- visitor   # busuanzi: https://busuanzi.ibruce.info/\n- featured-tags\n- short-about\n- recent-posts\n- friends-blog\n- archive\n- category\n\n# widget behavior\n## Archive\narchive_type: 'monthly'\nshow_count: true\n\n## Featured Tags\nfeatured-tags: true   # whether or not using Feature-Tags\nfeatured-condition-size: 0    # A tag will be featured if the size of it is more than this\n\n## Friends\nfriends: [\n    {\n        title: \"V_Vincen\",\n        href: \"https://v-vincen.life/\"\n    },{\n        title: \"Teacher Ye\",\n        href: \"http://teacherye.com/\"\n    }\n]\n```\n\n### Comment Settings\nHexo-Theme-LiveMyLife temporarily supports three Comments. I use gitalk comment system.\n\n#### Gitalk\nGitalk is a modern comment component based on GitHub Issue and Preact. See [Gitalk](https://github.com/gitalk/gitalk) for detailed configuration method.\n```yml\n# Gitalk Settings\n# Doc: https://github.com/gitalk/gitalk/blob/master/readme-cn.md\ngitalk:\n  owner:                          # 'GitHub repo owner'\n  admin:                          # ['GitHub repo owner and collaborators, only these guys can initialize github issues']\n  repo:                           # 'GitHub repo'\n  clientID:                       # 'GitHub Application Client ID'\n  clientSecret:                   # 'GitHub Application Client Secret'\n  perPage: 10                     # Pagination size, with maximum 100.\n  pagerDirection: last            # Comment sorting direction, available values are last and first.\n  createIssueManually: false      # By default, Gitalk will create a corresponding github issue for your every single page automatically when the logined user is belong to the admin users. You can create it manually by setting this option to true\n  language: en                    # Localization language key, en, zh-CN and zh-TW are currently available.\n  maxCommentHeight: 250           # An optional number to limit comments' max height, over which comments will be folded.Default 250.\n  proxy: https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token                         # GitHub oauth request reverse proxy for CORS. For example, the demo url is 'https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token'.You should deploy your own proxy url as in this issue https://github.com/gitalk/gitalk/issues/429.\n```\n\n#### Gitment\nGitment is a comment system based on GitHub Issues, which can be used in the frontend without any server-side implementation. See [Gitment](https://github.com/imsun/gitment) for detailed configuration method.\n```yml\n## Gitment Settings\n## Doc: https://github.com/imsun/gitment\ngitment:\n  owner:                          # Your GitHub ID. Required.\n  repo:                           # The repository to store your comments. Make sure you're repo's owner. Required.\n  client_id:                      # GitHub client ID. Required.\n  client_secret:                  # GitHub client secret. Required.\n  desc:                           # An optional description for your page, used in issue's body. Default ''.\n  perPage: 10                     # An optional number to which comments will be paginated. Default 20.\n  maxCommentHeight: 250           # An optional number to limit comments' max height, over which comments will be folded. Default 250.\n```\n\n#### Disqus\nIf you want use [Disqus](https://disqus.com/), you must have a circumvention (proxy, clime over the firewall) technology.\n```yml\n# Disqus settings\ndisqus_username: your-disqus-ID\n```\n\n\n### Analytics Settings\nHow to config analytics? -> Docs：[Analytics and Sitemap Settings](https://v-vincen.github.io/en/Analytics-and-Sitemap-Settings/)\n```yml\n# Analytics settings\n# Google Analytics\nga_track_id: UA-xxxxxx-xx   # Format: UA-xxxxxx-xx\n\n# Baidu Analytics\nba_track_id: ba_track_id\n```\n\n### Sitemap Settings\nHow to config sitemap? -> Docs：[Analytics and Sitemap Settings](https://v-vincen.github.io/en/Analytics-and-Sitemap-Settings/)\n```yml\n# Google sitemap\nsitemap:\n  path: sitemap.xml\n\n# Baidu sitemap\nbaidusitemap:\n  path: baidusitemap.xml\n\nbaidu_push: true\n```\n\n\n### Go to top icon Setup\nMy icon is using point, you can change to your own icon at `sourcre/css/images`.\n\n### Post tag\nYou can decide to show post tags or not.\n```yml\nhome_posts_tag: true\n```\n*Example:*\n\n![home_posts_tag-true](home_posts_tag-true.png)\n\n\n### Markdown render\nMy markdown render engine plugin is [hexo-renderer-markdown-it](https://github.com/celsomiranda/hexo-renderer-markdown-it).\n```yml\n# Markdown-it config\n## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n```\n\n### Install Mathjax\nTo install Mathjax, please click [How to Use Mathjax](https://v-vincen.github.io/en/How-to-Use-Mathjax/) for a detailed tutorial.\n\n### Anchorjs Settings\nAnd if you want to change the header anchor '❡', you can go to `layout/_partial/anchorjs.ejs` to change it. How to use anchorjs, see [AnchorJS](https://www.bryanbraun.com/anchorjs/#examples) for detailed examples.\n```yml\n# Anchorjs Settings\nanchorjs: true    # if you want to customize anchor. check out line:26 of `anchorjs.ejs`\n```\n\n```javascript\nasync(\"//cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'left',\n          icon: '❡'\n          // icon: 'ℬ'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n```\n\n### Article Top\n```yml\n# article top\ntop: true\n```\nHexo-theme-livemylife has added the article top function, just add `sticky: number` configuration to your markdown notes, articles are sorted by this number.\n*Example:*\n\n![top](top.png)\n\n### WordCount Settings\nA Word Count Plugin for Hexo. See [WordCount](https://github.com/willin/hexo-wordcount) for detailed configuration method.\n```yml\n# Dependencies: https://github.com/willin/hexo-wordcount\n# Docs: https://www.npmjs.com/package/hexo-wordcount\nwordcount: true\n```\n\n### Busuanzi Settings\nBusuanzi is a website traffic statistics plugin. How to use Busuanzi, see [Busuanzi](https://ibruce.info/2015/04/04/busuanzi/) for detailed examples.\n```yml\n## Dependencies: https://busuanzi.ibruce.info/\n## Docs: https://ibruce.info/\nbusuanzi: true\n```\n\n### Top scroll progress\n```yml\n# top scroll progress\nscroll: true\n```\n\n### Tip\n```yml\ntip:\n  enable: true\n  copyright: Say what you think... # If the copyright is blank, the default value will be used.\n```\n\n### Social Share Post\n```yml\n#Docs: https://github.com/overtrue/share.js\nshare: true\n```\n\n### Viewer Config\nViewer is a simple jQuery image viewing plugin. Let us first look at a [demo](https://fengyuanchen.github.io/viewer/). See [Viewer](https://github.com/fengyuanchen/viewer) for detailed configuration. If you want to modify the [options](https://github.com/fengyuanchen/viewerjs#options) of Viewer, you can go to `sourcre/js/viewer/pic-viewer.js` to change it.\n```yml\n# Viewer config\nviewer: true\n```\n\n### Theme Color Config\nHexo-Theme-LiveMyLife temporarily supports two themes color.\n```yml\n# ThemeColor config\nthemecolor:\n  enable: true\n  mode: dark # themecolor mode light or dark, default light\n```\n*Light theme preview:*\n\n![light theme](light.png)\n\n*Dark theme preview:*\n\n![dark theme](dark.png)\n\n\n### Mouseclick Config\n```yml\n# Mouseclick config\nmouseclick:\n  enable: true\n  content:\n    - The first step is as good as half over...\n    - Laugh and grow fat...\n    - Man proposes God disposes...\n    - When all else is lost the future still remains...\n    - Wasting time is robbing oneself...\n    - Sharp tools make good work...\n    - Cease to struggle and you cease to live...\n    - A friend in need is a friend indeed...\n    - Faith can move mountains...\n  color:\n    - '#9933CC'\n    - '#339933'\n    - '#66CCCC'\n    - '#FF99CC'\n    - '#CCCCFF'\n    - '#6666CC'\n    - '#663399'\n    - '#66CC99'\n    - '#FF0033'\n```\n*Mouseclick preview:*\n\n![mouseclick](mouseclick.png)\n\n\n### Ribbon Config\n```yml\nribbonDynamic: true\n```\n*Ribbon preview:*\n\n![ribbon](ribbon.png)\n\n\n### BgLineCanvas Config\n```yml\nbglinecanvas: true  # The special effects will take up a lot of cpu resorces, please open it carefully.\n```\n*BgLineCanvas preview:*\n\n![bglinecanvas](bglinecanvas.png)\n\n\n### Search Settings\n```yml\n# Dependencies: https://github.com/V-Vincen/hexo-generator-zip-search\nsearch:\n  enable: true\n  path: search.json\n  zipPath: search.flv\n  versionPath: searchVersion.json\n  field: post\n  # if auto, trigger search by changing input\n  # if manual, trigger search by pressing enter key or search button\n  trigger: auto\n  # show top n results per article, show all results by setting to -1\n  top_n_per_article: 1\n```\n\n### Gitter\nGitter is a chat and network platform that helps manage, develop and connect communities through messages, content and discovery. See [Gitter](https://gitter.im/) for detailed configuration method.\n```yml\n## Docs:https://gitter.im/?utm_source=left-menu-logo\n##\ngitter:\n  room: your-community/your-room\n```\n\n### Deployment\nReplace to your own repo!\n```yml\ndeploy:\n  type: git\n  repo: https://github.com/<yourAccount>/<repo> # or https://gitee.com/<yourAccount>/<repo>\n  branch: <your-branch>\n```\n\n## Hexo Basics\n\nSome hexo command:\n\n```bash\nhexo new post \"<post name>\"   # you can change post to another layout if you want\nhexo clean && hexo generate   # generate the static file\nhexo server   # run hexo in local environment\nhexo deploy   # hexo will push the static files automatically into the specific branch(gh-pages) of your repo!\n```\n\n## Have fun ^\\_^\n\nPlease [Star](https://github.com/V-Vincen/hexo-theme-livemylife) this Project if you like it! [Follow](https://github.com/V-Vincen) would also be appreciated! Peace!\n","tags":["Hexo-Theme-LiveMyLife"],"categories":["Hexo-Theme-LiveMyLife"]},{"title":"Hexo-Theme-LiveMyLife","url":"/cn/Hexo-Theme-LiveMyLife/","content":"\n> 移植 [Hux Blog](https://github.com/Huxpro/huxpro.github.io) 的主题，感谢 [Huxpro](https://github.com/Huxpro) 设计了如此完美的主题。\n>\n> 由 [Vincent](https://v-vincen.github.io/) 创建的 LiveMyLife 的主题修改来源 [YenYuHsuan](https://github.com/YenYuHsuan/hexo-theme-beantech)，参考主题 [dusign](https://github.com/dusign/hexo-theme-snail)、[Utone](https://github.com/shixiaohu2206/hexo-theme-huhu)，感谢 [dusign](https://github.com/dusign/hexo-theme-snail)、[Utone](https://github.com/shixiaohu2206/hexo-theme-huhu)。\n>   \n\n## 仓库\nGithub 仓库地址：https://github.com/V-Vincen/hexo-theme-livemylife\nGitee 仓库地址：https://gitee.com/V_Vincen/hexo-theme-livemylife\n\n### [预览 LiveMyLife 博客 ➾](https://v-vincen.github.io/)\n\n![LiveMyLife Desktop](livemylife-desktop.png)\n\n## 快速开始\n为了方便起见，我发布了整个项目，因此您可以按照下面的说明进行操作，然后就可以轻松自定义您自己的博客！\n\n让我们开始!!!\n\n### 安装 Node.js 和 Git\n```shell\n#For Mac\nbrew install node\nbrew install git\n```\n> Windows：下载 & 安装 Node.js。-> [Node.js](https://nodejs.org/zh-cn/download/)\n>\n> Windows：下载 & 安装 Git。-> [Git](https://git-scm.com/download/win)\n\n### 安装 Hexo\n```shell\n$ npm install -g hexo-cli\n```\n> 什么是 [Hexo](https://hexo.io/docs/)?\n>\n> Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n### 设置你的博客\n```shell\n$ hexo init blog\n```\n> 更多的命令 -> [Hexo Commands](https://hexo.io/docs/commands)\n\n\n## 主题使用\n### 初始化\n```shell\ncd blog\nrm -rf scaffolds source themes _config.landscape.yml _config.yml package.json yarn.lock #just keep node_modules\ngit clone https://github.com/V-Vincen/hexo-theme-livemylife.git\nmv hexo-theme-livemylife/* ./\nrm -rf hexo-theme-livemylife\nnpm install\n```\n\n### 设置主题\n修改 `theme` 属性值，在 `_config.yml` 配置文件中。\n```yml\n# Extensions\n## Themes: https://hexo.io/themes/\n## Plugins: https://hexo.io/plugins/\ntheme: livemylife\n```\n\n### 启动服务\n```shell\nhexo generate # or hexo g\nhexo server   # or hexo s\n```\n启动本地服务器。 默认访问地址 `http://localhost:4000/`。\n> 更多命令 -> [Hexo Commands](https://hexo.io/docs/commands)\n\n\n## 配置\n使用您自己的信息修改 `_config.yml` 配置文件，尤其是以下部分：\n\n### 网址信息配置\n将以下信息替换为您自己的信息。\n```yml\n# Site\ntitle: Live My Life\nsubtitle: 淡而无味也是一种味道\nauthor: Mr.Vincent\ntimezone:\n```\n\n### 语言国际化 (i18n)\n若要让您的网站以不同语言呈现，您可使用国际化（internationalization）功能。-> 文档：[How to Use Internationalization（i18n）](https://v-vincen.github.io/en/How-to-Use-Internationalization%EF%BC%88i18n%EF%BC%89/)\n```yml\n# Internationalization (i18n) Setting\nlanguage: # At present, only en、cn and tw are supported. You can customize the language，refer to `languages/en.yml`.\n  - en\n  - cn\n\nlangselect:\n  enable: true # If open, it will automatically generation lang-select button.This button can jump in articles in different languages, but the articles must have the same name.\n  options: # langselect button display options\n    en: English\n    cn: 简体中文\n    # tw: 正體中文\n\ni18n_dir: :lang  \npermalink: :lang/:title/ \nnew_post_name: :lang/:title.md\n\n# hexo-generator-i18n config\n## Docs: https://github.com/xcatliu/hexo-generator-index-i18n\nindex_generator:\n  per_page: 10\n  pagination_dir: page\n  path: ''\n  order_by: -date\n\narchive_generator:\n  enabled: false\n  per_page: 10\n  yearly: true\n  monthly: true\n  daily: false\n  order_by: -date\n```\n*English 预览：*\n\n![en](langen.png)\n\n*Chinese 预览：*\n\n![cn](langcn.png)\n\n\n### CDN 配置\nJsDelivr JsDelivr是一种免费，快速，可靠和自动化的CDN，可用于开源。如何使用 Jsdelivr？-> 文档：[免费 CDN 提速 Github 静态资源访问](https://v-vincen.github.io/en/Github-%E5%8A%A0%E9%80%9F%E4%BC%98%E5%8C%96/#%E5%85%8D%E8%B4%B9-CDN-%E6%8F%90%E9%80%9F-Github-%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E8%AE%BF%E9%97%AE)\n```yml\n# CDN Setting\n# Docs: https://www.jsdelivr.com/?docs=gh\n# If Github Pages deploy，you can ues jsdelivr settings\n#\njsdelivr:\n  jsdelivr_url: https://cdn.jsdelivr.net/gh/\n  github_username: V-Vincen\n```\n**注意：** Hexo-theme-livemylife 主题中有大量的 css、js 和 images，为了提高访问速度，主题中所有资源文件都使用了 JsDelivr CDN（内容分发）。但仅适用于 Github Pages 部署方式。-> 文档：[How to apply JsDelivr CDN in Hexo-theme-livemylife Theme](https://v-vincen.github.io/en/How-to-apply-JsDelivr-CDN-in-Hexo-theme-livemylife-Theme/)\n\n### 站点设置\n将自定义图片放在 `img` 目录中。\n```yml\n# Site settings\nSEOTitle: JavaDev | 一如Java深似海\nemail: hexo-theme-livemylife@mail.com\ndescription: \"It's an IT blog...\"\nkeyword: \"Java,v-vincen,v-vincen,livemylife,IT  blog,Blog\"\nheader-img: img/header_img/newhome_bg.jpg\narchives-img: img/header_img/archive_bg2.jpg\n```\n\n### 网站图标设置\n```yml\nfavicon: img/avatar/favicon.jpg\n```\n\n### 签名设置\n将您的签名图片复制到 `<root>/img/signature` 并修改配置文件 `_config.yml`。\n```yml\nsignature: true   # show signature\nsignature-img: img/signature/<your-signature>\n```\n> 如何制作签名 -> [Free Online Signature](https://fontmeme.com/signature-fonts/)\n\n### 波浪设置\n```yml\n# Wave settings\nwave: true\n```\n*案例：*\n\n![wave](wave.png)\n\n\n### 社交网络服务设置\n如果您不想显示它，则可以直接将其删除。\n```yml\n# SNS settings\n# RSS: true\ngithub_username: V-Vincen\ntwitter_username: V_Vincen_\ninstagram_username: V_Vincen_\n# facebook_username:  yourAccount\n# linkedin_username:  yourAccount\n# zhihu_username: yourAccount\nweibo_username: WVincen\n```\n\n### 侧边栏设置\n将您的头像复制到 `<root>/img/avatar` 并修改配置文件 `_config.yml`。\n```yml\nsidebar: true   # whether or not using Sidebar.\nsidebar-about-description: \"I don't know where I am going ,but I am on my way...\"\nsidebar-avatar: img/avatar/vincnet.jpg    # use absolute URL, seeing it's used in both `/` and `/about/`\nwidgets:\n- visitor   # busuanzi: https://busuanzi.ibruce.info/\n- featured-tags\n- short-about\n- recent-posts\n- friends-blog\n- archive\n- category\n\n# widget behavior\n## Archive\narchive_type: 'monthly'\nshow_count: true\n\n## Featured Tags\nfeatured-tags: true   # whether or not using Feature-Tags\nfeatured-condition-size: 0    # A tag will be featured if the size of it is more than this\n\n## Friends\nfriends: [\n    {\n        title: \"V_Vincen\",\n        href: \"https://v-vincen.life/\"\n    },{\n        title: \"Teacher Ye\",\n        href: \"http://teacherye.com/\"\n    }\n]\n```\n\n### 评论系统设置\nHexo-Theme-LiveMyLife 主题暂时支持三种评论方式。我使用 gitalk 为默认评论系统。\n\n#### Gitalk\nGitalk 是基于 GitHub Issue 和 Preact 的现代化的评论组件。 有关详细的配置方法，请参考 [Gitalk](https://github.com/gitalk/gitalk) 官方文档。\n```yml\n# Gitalk Settings\n# Doc: https://github.com/gitalk/gitalk/blob/master/readme-cn.md\ngitalk:\n  owner:                          # 'GitHub repo owner'\n  admin:                          # ['GitHub repo owner and collaborators, only these guys can initialize github issues']\n  repo:                           # 'GitHub repo'\n  clientID:                       # 'GitHub Application Client ID'\n  clientSecret:                   # 'GitHub Application Client Secret'\n  perPage: 10                     # Pagination size, with maximum 100.\n  pagerDirection: last            # Comment sorting direction, available values are last and first.\n  createIssueManually: false      # By default, Gitalk will create a corresponding github issue for your every single page automatically when the logined user is belong to the admin users. You can create it manually by setting this option to true\n  language: en                    # Localization language key, en, zh-CN and zh-TW are currently available.\n  maxCommentHeight: 250           # An optional number to limit comments' max height, over which comments will be folded.Default 250.\n  proxy: https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token                         # GitHub oauth request reverse proxy for CORS. For example, the demo url is 'https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token'.You should deploy your own proxy url as in this issue https://github.com/gitalk/gitalk/issues/429.\n```\n\n#### Gitment\nGitment 是一个基于 GitHub Issues 的评论系统，可以在前端使用它，而无需任何服务器端实现。有关详细的配置方法，请参见 [Gitment](https://github.com/imsun/gitment) 官方文档。\n```yml\n## Gitment Settings\n## Doc: https://github.com/imsun/gitment\ngitment:\n  owner:                          # Your GitHub ID. Required.\n  repo:                           # The repository to store your comments. Make sure you're repo's owner. Required.\n  client_id:                      # GitHub client ID. Required.\n  client_secret:                  # GitHub client secret. Required.\n  desc:                           # An optional description for your page, used in issue's body. Default ''.\n  perPage: 10                     # An optional number to which comments will be paginated. Default 20.\n  maxCommentHeight: 250           # An optional number to limit comments' max height, over which comments will be folded. Default 250.\n```\n\n#### Disqus\n如果你想要使用 [Disqus](https://disqus.com/) 评论系统，则必须有代理。\n```yml\n# Disqus settings\ndisqus_username: your-disqus-ID\n```\n\n\n### 站点分析设置\n如何配置站点分析? -> 文档：[Analytics and Sitemap Settings](https://v-vincen.github.io/en/Analytics-and-Sitemap-Settings/)\n```yml\n# Analytics settings\n# Google Analytics\nga_track_id: UA-xxxxxx-xx   # Format: UA-xxxxxx-xx\n\n# Baidu Analytics\nba_track_id: ba_track_id\n```\n\n### 站点地图设置\n如何配置站点地图? -> 文档：[Analytics and Sitemap Settings](https://v-vincen.github.io/en/Analytics-and-Sitemap-Settings/)\n```yml\n# Google sitemap\nsitemap:\n  path: sitemap.xml\n\n# Baidu sitemap\nbaidusitemap:\n  path: baidusitemap.xml\n\nbaidu_push: true\n```\n\n### 置顶图标设置\n我使用的置顶图标是键头，你可以在 `sourcre/css/images` 目录下替换你自己想要的图标。\n\n### 文章标签\n您可以选择是否显示博文标签。\n```yml\nhome_posts_tag: true\n```\n*案例：*\n\n![home_posts_tag-true](home_posts_tag-true.png)\n\n\n### Markdown 渲染器\n我使用的 markdown 渲染引擎插件是 [hexo-renderer-markdown-it](https://github.com/celsomiranda/hexo-renderer-markdown-it)。\n```yml\n# Markdown-it config\n## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n```\n\n### 安装 Mathjax（数学公式渲染器）\n要安装 Mathjax，请单击 [How to Use Mathjax](https://v-vincen.github.io/en/How-to-Use-Mathjax/)  以获取详细的教程。\n\n### Anchorjs（锚点）设置\n如果你想要更改文章目录标题前部的锚点 “❡”，则可以到 `layout/_partial/anchorjs.ejs` 目录下进行更改。如何使用 anchorjs，请参阅 [AnchorJS](https://www.bryanbraun.com/anchorjs/#examples) 以获取详细示例。\n```yml\n# Anchorjs Settings\nanchorjs: true    # if you want to customize anchor. check out line:26 of `anchorjs.ejs`\n```\n\n```javascript\nasync(\"//cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'left',\n          icon: '❡'\n          // icon: 'ℬ'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n```\n\n### 博文置顶\n```yml\n# article top\ntop: true\n```\nHexo-theme-livemylife 主题添加了文章顶部功能，只要在您的 markdown 笔记中添加属性`sticky: number` 配置，文章按此数字排序。\n*案例：*\n\n![top](top.png)\n\n### 文章字数统计设置\nWordCount 是 Hexo 的文章字数统计插件. 有关详细的配置方法，请参见 [WordCount](https://github.com/willin/hexo-wordcount) 文档。\n```yml\n# Dependencies: https://github.com/willin/hexo-wordcount\n# Docs: https://www.npmjs.com/package/hexo-wordcount\nwordcount: true\n```\n\n### Busuanzi（不蒜子）设置\nBusuanzi 是一个网站流量统计插件。如何使用 Busuanzi，有关详细示例，请参见 [Busuanzi](https://ibruce.info/2015/04/04/busuanzi/) 文档。\n```yml\n## Dependencies: https://busuanzi.ibruce.info/\n## Docs: https://ibruce.info/\nbusuanzi: true\n```\n\n### 顶部滚动进度条设置\n```yml\n# top scroll progress\nscroll: true\n```\n\n### 著作权声明设置\n```yml\ntip:\n  enable: true\n  copyright: Say what you think... # If the copyright is blank, the default value will be used.\n```\n\n### 社交分享博文设置\n```yml\n#Docs: https://github.com/overtrue/share.js\nshare: true\n```\n\n### Viewer（图片预览）设置\nViewer 是一个简单的 jQuery 图片预览插件. 让我们首先看一个 [demo](https://fengyuanchen.github.io/viewer/)。有关详细配置，请参见 [Viewer](https://github.com/fengyuanchen/viewer) 官方文档。 如果要修改 Viewer 的 [options](https://github.com/fengyuanchen/viewerjs#options) 设置，则可以到 `sourcre/js/viewer/pic-viewer.js` 目录下修改。\n```yml\n# Viewer config\nviewer: true\n```\n\n### 主题模式设置\nHexo-Theme-LiveMyLife 主题暂时支持两种主题模式。\n```yml\n# ThemeColor config\nthemecolor:\n  enable: true\n  mode: dark # themecolor mode light or dark, default light\n```\n*明亮主题模式预览：*\n\n![light theme](light.png)\n\n*黑暗主题模式预览：*\n\n![dark theme](dark.png)\n\n\n### 鼠标点击效果设置\n```yml\n# Mouseclick config\nmouseclick:\n  enable: true\n  content:\n    - The first step is as good as half over...\n    - Laugh and grow fat...\n    - Man proposes God disposes...\n    - When all else is lost the future still remains...\n    - Wasting time is robbing oneself...\n    - Sharp tools make good work...\n    - Cease to struggle and you cease to live...\n    - A friend in need is a friend indeed...\n    - Faith can move mountains...\n  color:\n    - '#9933CC'\n    - '#339933'\n    - '#66CCCC'\n    - '#FF99CC'\n    - '#CCCCFF'\n    - '#6666CC'\n    - '#663399'\n    - '#66CC99'\n    - '#FF0033'\n```\n*鼠标点击效果预览：*\n\n![mouseclick](mouseclick.png)\n\n\n### 背景绸带效果设置\n```yml\nribbonDynamic: true\n```\n*背景绸带效果预览：*\n\n![ribbon](ribbon.png)\n\n\n### 背景线画布效果设置\n```yml\nbglinecanvas: true  # The special effects will take up a lot of cpu resorces, please open it carefully.\n```\n*背景线画布效果预览：*\n\n![bglinecanvas](bglinecanvas.png)\n\n\n### 搜索设置\n```yml\n# Dependencies: https://github.com/V-Vincen/hexo-generator-zip-search\nsearch:\n  enable: true\n  path: search.json\n  zipPath: search.flv\n  versionPath: searchVersion.json\n  field: post\n  # if auto, trigger search by changing input\n  # if manual, trigger search by pressing enter key or search button\n  trigger: auto\n  # show top n results per article, show all results by setting to -1\n  top_n_per_article: 1\n```\n\n### Gitter（聊天室）\nGitter 是一个聊天和网络平台，通过消息、内容和发现，帮助管理、发展和连接社区。 详细配置方法请查看 [Gitter](https://gitter.im/) 官方文档。\n```yml\n## Docs:https://gitter.im/?utm_source=left-menu-logo\n##\ngitter:\n  room: your-community/your-room\n```\n\n### 部署\n替换为你自己的仓库地址。\n```yml\ndeploy:\n  type: git\n  repo: https://github.com/<yourAccount>/<repo> # or https://gitee.com/<yourAccount>/<repo>\n  branch: <your-branch>\n```\n\n## Hexo 常用命令\n```bash\nhexo new post \"<post name>\"   # you can change post to another layout if you want\nhexo clean && hexo generate   # generate the static file\nhexo server   # run hexo in local environment\nhexo deploy   # hexo will push the static files automatically into the specific branch(gh-pages) of your repo!\n```\n\n## 有一个好的体验 ^\\_^\n如果你喜欢该主题，请 [Star](https://github.com/V-Vincen/hexo-theme-livemylife)！不胜感激你的 [Follow](https://github.com/V-Vincen)！比心！\n","tags":["Hexo-Theme-LiveMyLife"],"categories":["Hexo-Theme-LiveMyLife"]}]